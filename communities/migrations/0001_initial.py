# Generated by Django 3.2.18 on 2023-06-13 05:17

import ckeditor_uploader.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0005_auto_20220424_2025'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('category', models.CharField(choices=[('', '카테고리'), ('일상 이야기', '일상 이야기'), ('건물 소식', '건물 소식'), ('자취 꿀팁', '자취 꿀팁'), ('같이 사요', '같이 사요')], max_length=40)),
                ('views', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('dislike_users', models.ManyToManyField(related_name='dislike_communities_posts', to=settings.AUTH_USER_MODEL)),
                ('like_users', models.ManyToManyField(related_name='like_communities_posts', to=settings.AUTH_USER_MODEL)),
                ('scrape_users', models.ManyToManyField(related_name='scrape_communities_posts', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_communities_posts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('depth', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('dislike_users', models.ManyToManyField(related_name='dislike_communities_comments', to=settings.AUTH_USER_MODEL)),
                ('like_users', models.ManyToManyField(related_name='like_communities_comments', to=settings.AUTH_USER_MODEL)),
                ('parent_comment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_comments', to='communities.comment')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='communities.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_communities_comments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
